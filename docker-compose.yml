version: '3'
services:

# MY APP
  web1:
    build: ./main
    container_name: tb_web1
    restart: always
    command: bash -c "python main.py run -h 0.0.0.0"
    depends_on:
      - db
    volumes:
      - ./main:/main
    ports:
      - 5000:5000
    env_file: .env

  web2:
    build: ./main
    container_name: tb_web2
    restart: always
    command: bash -c "python main.py run -h 0.0.0.0"
    depends_on:
      - db
    volumes:
      - ./main:/main
    ports:
      - 5001:5000
    env_file: .env

  task_generator:
    build:
      ./task_generator
    container_name: tb_task_generator
    command: bash -c "python consumer.py"
    restart: always
    depends_on:
      - rabbit
    volumes:
      - ./task_generator:/task_generator
    env_file: .env

  nginx:
    build: ./nginx
    ports:
      - 1337:80
    depends_on:
      - web1
      - web2

# SERVICES
  rabbit:
    image: rabbitmq:3-management
    hostname: "rabbit"
    container_name: tb_rabbit
    env_file: .env
    ports:
      - 15672:15672
      - 5672:5672
    logging:
      driver: none

  db:
    image: postgres:latest
    container_name: tb_postgres_web
    environment:
      - POSTGRES_USER=hello_flask
      - POSTGRES_PASSWORD=hello_flask
      - POSTGRES_DB=hello_flask_dev
    env_file: .env
    ports:
      - 5432:5432

  redis:
    container_name: tb_redis
    image: redis
    ports:
      - 6379:6379
    restart: always
    logging:
      driver: none

  minio:
    image: minio/minio
    command: server /data --console-address ":40089"
    expose:
      - "9000"
      - "9001"
    ports:
      - 9000:9000
      - 40089:40089
    environment:
      MINIO_HTTP_TRACE: /log/minio.log
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    volumes:
      - ./minio/data:/data
      - ./minio/log:/log
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3


